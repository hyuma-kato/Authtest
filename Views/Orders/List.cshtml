@model IEnumerable<Authtest.Models.Order>

@using System.Security.Claims;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Authorization;
@using Authtest.Data;

@{
    var claims = User.Claims.ToList();
    var user_id = claims.FirstOrDefault(x => x.Type.Equals("UserName", StringComparison.OrdinalIgnoreCase)).Value;
}

@{
    ViewData["Title"] = "List";
}

<h1>List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (item.User.Id.Equals(user_id))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Count)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Id)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
                }
            }
        </tbody>
</table>
